<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.idleItem.tradeSystem.mapper.AddressMapper">
  <resultMap id="BaseResultMap" type="com.idleItem.tradeSystem.entity.Address">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="consignee_name" jdbcType="VARCHAR" property="consigneeName" />
    <result column="consignee_phone" jdbcType="VARCHAR" property="consigneePhone" />
    <result column="school_name" jdbcType="VARCHAR" property="schoolName" />
    <result column="campus_name" jdbcType="VARCHAR" property="campusName" />
    <result column="dormitory_name" jdbcType="VARCHAR" property="dormitoryName" />
    <result column="default_flag" jdbcType="TINYINT" property="defaultFlag" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, consignee_name, consignee_phone, school_name, campus_name, dormitory_name,
    default_flag, user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from address
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getAddressByUser" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from address
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="getDefaultAddress" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id
    from address
    where user_id = #{userId,jdbcType=BIGINT} and default_flag = 1
  </select>
  <delete id="deleteByPrimaryKeyAndUser" parameterType="java.lang.Long">
    delete from address
    where id = #{id,jdbcType=BIGINT} and user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.idleItem.tradeSystem.entity.Address" useGeneratedKeys="true">
    insert into address (consignee_name, consignee_phone, school_name, campus_name, dormitory_name,
                         default_flag, user_id)
    values (#{consigneeName,jdbcType=VARCHAR}, #{consigneePhone,jdbcType=VARCHAR}, #{schoolName,jdbcType=VARCHAR},
      #{campusName,jdbcType=VARCHAR}, #{dormitoryName,jdbcType=VARCHAR},
      #{defaultFlag,jdbcType=TINYINT}, #{userId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.idleItem.tradeSystem.entity.Address" useGeneratedKeys="true">
    insert into address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="consigneeName != null">
        consignee_name,
      </if>
      <if test="consigneePhone != null">
        consignee_phone,
      </if>
      <if test="schoolName != null">
        school_name,
      </if>
      <if test="campusName != null">
        city_name,
      </if>
      <if test="dormitoryName != null">
       dormitory_name,
      </if>
      <if test="defaultFlag != null">
        default_flag,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="consigneeName != null">
        #{consigneeName,jdbcType=VARCHAR},
      </if>
      <if test="consigneePhone != null">
        #{consigneePhone,jdbcType=VARCHAR},
      </if>
      <if test="schoolName != null">
        #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="campusName != null">
        #{campusName,jdbcType=VARCHAR},
      </if>
      <if test="dormitoryName != null">
        #{dormitoryName,jdbcType=VARCHAR},
      </if>
      <if test="defaultFlag != null">
        #{defaultFlag,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.idleItem.tradeSystem.entity.Address">
    update address
    <set>
      <if test="consigneeName != null">
        consignee_name = #{consigneeName,jdbcType=VARCHAR},
      </if>
      <if test="consigneePhone != null">
        consignee_phone = #{consigneePhone,jdbcType=VARCHAR},
      </if>
      <if test="schoolName != null">
        school_name = #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="campusName != null">
        campus_name = #{campusName,jdbcType=VARCHAR},
      </if>
      <if test="dormitoryName != null">
       dormitory_name = #{dormitoryName,jdbcType=VARCHAR},
      </if>
      <if test="defaultFlag != null">
        default_flag = #{defaultFlag,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByUserIdSelective" parameterType="com.idleItem.tradeSystem.entity.Address">
    update address
    <set>
      <if test="consigneeName != null">
        consignee_name = #{consigneeName,jdbcType=VARCHAR},
      </if>
      <if test="consigneePhone != null">
        consignee_phone = #{consigneePhone,jdbcType=VARCHAR},
      </if>
      <if test="schoolName != null">
        school_name = #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="campusName != null">
        campus_name = #{campusName,jdbcType=VARCHAR},
      </if>
      <if test="dormitoryName != null">
        dormitory_name = #{dormitoryName,jdbcType=VARCHAR},
      </if>
      <if test="defaultFlag != null">
        default_flag = #{defaultFlag,jdbcType=TINYINT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.idleItem.tradeSystem.entity.Address">
    update address
    set consignee_name = #{consigneeName,jdbcType=VARCHAR},
      consignee_phone = #{consigneePhone,jdbcType=VARCHAR},
      school_name = #{schoolName,jdbcType=VARCHAR},
      campus_name = #{campusName,jdbcType=VARCHAR},
      dormitory_name = #{dormitoryName,jdbcType=VARCHAR},
      default_flag = #{defaultFlag,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>