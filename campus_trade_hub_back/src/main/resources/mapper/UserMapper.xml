<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.idleItem.tradeSystem.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.idleItem.tradeSystem.entity.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account_number" jdbcType="VARCHAR" property="accountNumber" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="sign_in_time" jdbcType="TIMESTAMP" property="signInTime" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="campus" jdbcType="VARCHAR" property="campus" />
    <result column="user_status" jdbcType="TINYINT" property="userStatus" />
    <result column="message_status" jdbcType="TINYINT" property="userMessageStatus" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
  </resultMap>
  <sql id="Base_Column_List">
    id, account_number, nickname, avatar, sex, age, phone, campus, sign_in_time, user_status ,message_status,picture
  </sql>
  <select id="userLogin" resultMap="BaseResultMap">
    select id, account_number, nickname, avatar, sex, age, phone, campus, sign_in_time, user_status ,message_status,picture
    from user
    where account_number = #{accountNumber} and user_password = #{userPassword}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="countNormalUser" resultType="int">
    select count(*) from user
    where user_status is null or user_status = 0
  </select>
  <select id="countBanUser" resultType="int">
    select count(*) from user
    where user_status = 1
  </select>
  <select id="getUserList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
  </select>
  <select id="getNormalUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user where user_status is null or user_status = 0 order by id desc limit #{begin}, #{nums}
  </select>
  <select id="getBanUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user where user_status = 1 order by id desc limit #{begin}, #{nums}
  </select>
  <select id="findUserByList" resultMap="BaseResultMap">
    select id, nickname, avatar, campus, sign_in_time
    from user where id in
    <foreach collection="idList" index="index" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.idleItem.tradeSystem.entity.Order" useGeneratedKeys="true">
    insert into user (account_number, user_password, nickname,
                      avatar, sex, age, phone, campus, sign_in_time,user_status,message_status)
    values (#{accountNumber,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR},
            #{avatar,jdbcType=VARCHAR}, '男',18,'00000000000','创新校区',#{signInTime,jdbcType=TIMESTAMP},0,0)
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.idleItem.tradeSystem.entity.Order" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountNumber != null">
        account_number,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="campus != null">
        campus,
      </if>
      <if test="signInTime != null">
        sign_in_time,
      </if>
      <if test="message_status != null">
        message_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountNumber != null">
        #{accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex= #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age= #{age,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone= #{phone,jdbcType=VARCHAR},
      </if>
      <if test="campus != null">
        campus= #{campus,jdbcType=VARCHAR},
      </if>
      <if test="signInTime != null">
        #{signInTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.idleItem.tradeSystem.entity.Order">
    update user
    <set>
      <if test="accountNumber != null">
        account_number = #{accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex= #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age= #{age,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone= #{phone,jdbcType=VARCHAR},
      </if>
      <if test="campus != null">
        campus= #{campus,jdbcType=VARCHAR},
      </if>
      <if test="signInTime != null">
        sign_in_time = #{signInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus},
      </if>
      <if test="userMessageStatus != null">
        message_status = #{userMessageStatus,jdbcType=TINYINT},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.idleItem.tradeSystem.entity.Order">
    update user
    set account_number = #{accountNumber,jdbcType=VARCHAR},
        user_password = #{userPassword,jdbcType=VARCHAR},
        nickname = #{nickname,jdbcType=VARCHAR},
        avatar = #{avatar,jdbcType=VARCHAR},
        sex = #{sex,jdbcType=VARCHAR},
        age = #{age,jdbcType=INTEGER},
        phone = #{phone,jdbcType=VARCHAR},
        campus = #{campus,jdbcType=VARCHAR},
        sign_in_time = #{signInTime,jdbcType=TIMESTAMP},
        picture = #{picture,jdbcType=VARCHAR},
        where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updatePassword">
    update user
    set user_password = #{newPassword,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT} and user_password=#{oldPassword,jdbcType=VARCHAR}
  </update>
  <update id="updatemessagestatus">
    update user
    set message_status = message_status+1
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updatemessagestatus1">
    update user
    set message_status = message_status-1
    where id = #{id,jdbcType=BIGINT} and message_status>0
  </update>
</mapper>